=============================================================================
List of generated methods in project: k22fawait1

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "pin_mux"   (component PinSettings)
   - pin_mux_hardware_init -This method sets registers according routing settings. Call this method in user code to route 
                desired pins into peripherals. The method is useful for reinitialization HW after some routing changes.
   - pin_mux_configure_ftm_pins -FTM method sets registers according routing settings. Call this method code to route desired 
                pins into FTM0, FTM1, FTM2, FTM3 peripherals.
   - pin_mux_configure_gpio_pins -GPIO method sets registers according routing settings. Call this method code to route desired 
                pins into PTA, PTB, PTC, PTD, PTE peripherals.
   - pin_mux_configure_i2c_pins -I2C method sets registers according routing settings. Call this method code to route desired 
                pins into I2C0, I2C1 peripherals.
   - pin_mux_configure_i2s_pins -I2S method sets registers according routing settings. Call this method code to route desired 
                pins into I2S0 peripheral.
   - pin_mux_configure_jtag_pins -JTAG method sets registers according routing settings. Call this method code to route desired 
                pins into JTAG peripheral.
   - pin_mux_configure_llwu_pins -LLWU method sets registers according routing settings. Call this method code to route desired 
                pins into LLWU peripheral.
   - pin_mux_configure_osc_pins -OSC method sets registers according routing settings. Call this method code to route desired 
                pins into OSC peripheral.
   - pin_mux_configure_rtc_pins -RTC method sets registers according routing settings. Call this method code to route desired 
                pins into RTC peripheral.
   - pin_mux_configure_spi_pins -SPI method sets registers according routing settings. Call this method code to route desired 
                pins into SPI0, SPI1 peripherals.
   - pin_mux_configure_uart_pins -UART method sets registers according routing settings. Call this method code to route desired 
                pins into UART0, UART1, UART2 peripherals.

Module "Term1"     (component Term)
   - Term1_CRLF -Send CRLF to terminal.
   - Term1_SendStr -Send string to terminal.
   - Term1_SendNum -Send number to terminal.
   - Term1_SendChar -Send char to terminal.
   - Term1_Cls -Clear the terminal window.
   - Term1_MoveTo -Move cursor to position x, y. Range of coordinates can be from 1 to the size, which depends on the used 
                terminal. Position [1,1] represents the upper left corner.
   - Term1_ReadChar -Read char from terminal.
   - Term1_KeyPressed -Test if char was received from the terminal.

Module "AD1"       (component ADC)
   - AD1_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD1_GetValue16 -This method returns the last measured values of all channels. Compared with <GetValue> method this method 
                returns more accurate result if the <number of conversions> is greater than 1 and <AD resolution> is less than 
                16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD1_Calibrate -This method starts self calibration process. Calibration is typically used to remove the effects of the 
                gain and offset from a specific reading.
   - AD1_GetCalibrationStatus -This method should be used for check the last calibration result, return value is invalid if no 
                calibration is called.

Module "AD2"       (component ADC)
   - AD2_Measure -This method performs one measurement on all channels that are set in the component inspector. (Note: If the 
                <number of conversions> is more than one the conversion of A/D channels is performed specified number of times.)
   - AD2_GetValue16 -This method returns the last measured values of all channels. Compared with <GetValue> method this method 
                returns more accurate result if the <number of conversions> is greater than 1 and <AD resolution> is less than 
                16 bits. In addition, the user code dependency on <AD resolution> is eliminated.
   - AD2_Calibrate -This method starts self calibration process. Calibration is typically used to remove the effects of the 
                gain and offset from a specific reading.
   - AD2_GetCalibrationStatus -This method should be used for check the last calibration result, return value is invalid if no 
                calibration is called.

Module "CS1"       (component CriticalSection)
   - CS1_CriticalVariable -Defines a variable if necessary. This is a macro.
   - CS1_EnterCritical -Enters a critical section
   - CS1_ExitCritical -Exits a critical section
   - CS1_Deinit -Driver de-initialization routine
   - CS1_Init -driver initialization routine

Module "MCUC1"     (component McuLibConfig)
   - MCUC1_Init -Driver initialization method
   - MCUC1_Deinit -Driver deinitialization method

Module "Cpu"       (component MK22FN512LH12)
   - Cpu_SetClockConfiguration -Calling of this method will cause the clock configuration change and reconfiguration of all 
                components according to the requested clock configuration setting.
   - Cpu_GetClockConfiguration -Returns the active clock configuration identifier. The method is automatically enabled if more 
                than one clock configuration is enabled in the component.

===================================================================================
